# SPDX-FileCopyrightText: 2023 2023 Dom Rodriguez <shymega@shymega.org.uk>
#
# SPDX-License-Identifier: GPL-3.0-only

name: "Flake workflow"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 6"

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: gh-ref-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-flake:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
        with:
          github_access_token: ${{ secrets.NIX_GH_ACTIONS_TOKEN }}
      - name: Update Flake lockfile
        run: nix flake update --accept-flake-config
      - name: Commit changes to lockfile
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(lockfile): Update Flake lockfile"

  format-flake:
    needs: [update-flake]
    if: ${{ needs.update-flake.result == 'success' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - uses: cachix/install-nix-action@V27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Format Nix files
        run: nix run nixpkgs#nixpkgs-fmt -- ./*
      - name: Commit changes to codebase
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(lint): Format Nix files"

  check-flake:
    needs: [format-flake]
    if: ${{ needs.format-flake.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - name: Install Nix
        uses: cachix/install-nix-action@V27
        with:
          github_access_token: ${{ secrets.NIX_GH_ACTIONS_TOKEN }}
      - name: Check Flake formatting
        run: nix run nixpkgs#nixpkgs-fmt -- --check ./
      - name: Check Flake with Nix
        run: nix flake check --all-systems
      - name: Check Flake with Statix
        run: nix run nixpkgs#statix -- check ./
